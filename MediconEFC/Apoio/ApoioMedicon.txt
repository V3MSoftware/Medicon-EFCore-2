//=================Resetar identy das tabelas ==================
DBCC CHECKIDENT ('Mensagem', RESEED, 1)
DBCC CHECKIDENT ('Plano', RESEED, 1)
DBCC CHECKIDENT ('Equipe', RESEED, 1)
DBCC CHECKIDENT ('Corretor', RESEED, 1)
DBCC CHECKIDENT ('Cliente', RESEED, 1)
DBCC CHECKIDENT ('FaixaEtaria', RESEED, 1)
DBCC CHECKIDENT ('PrecoPlano', RESEED, 1)
DBCC CHECKIDENT ('Proposta', RESEED, 1)
DBCC CHECKIDENT ('Dependente', RESEED, 1)
DBCC CHECKIDENT ('UploadArquivo', RESEED, 1)

http://www.eduardopires.net.br/2013/04/mvc-validando-dados-com-dataannotations/
https://regex101.com/r/tX7mA8/1

//===========================================================================================================================================================
// -> para fazer a tradução da mensagem do JS abaixo se quiser voltar so descomentar as mensagens originais 
//	C:\Dev\MediconEFC\MediconEFC\wwwroot\lib\jquery-validation\dist\jquery.validate.js
//	e do .min
//	Ex: no link abaixo
//	https://github.com/jquery-validation/jquery-validation/blob/master/src/localization/messages_pt_BR.js
//===========================================================================================================================================================

//===========================================================================================================================================================
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------
	TODO: Criar as tabelas de historico quando acaba as telas normais do sistema
-----------------------------------------------------------------------------------------------------------------------------------------------------------*\
//Para colocar margin no datatable "Selecionar o id tabelaOrdenada" e na element.style colocar conforme mostrado abaixo
element.style {
    margin-left: 2px;
    margin-right: 2px;
}

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------
	Erro Edentity BD (1,1)
	Solução:
	designDireto no modelo de dados e gerar auto incremento sql server: btn direito/ view design/key/f4/identitySpercification=true /depois update
-----------------------------------------------------------------------------------------------------------------------------------------------------------*\
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------
	Carregar endereço a partir do cep
	 http://www.eduardorizo.com.br/2014/12/04/correios-webservice-para-consulta-de-enderecos-a-partir-de-um-cep/
-----------------------------------------------------------------------------------------------------------------------------------------------------------*\
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------
	//TODO: Mudar thema bootstrap
		https://bootswatch.com/3/			bootstrap-sandstone testar os outros temas "Spacelab /darkly/ Lumen /Superhero" tem varios .css mas é apenas um suado
		Alteração	=> Spacelab: /*Obs: Ajustes na tag p do thema Spacelab "color: #6d94bf; /*TODO: Está "color" foi adicionada para este projeto  */"
		Alteração	=> Flatly	/*Obs: Ajustes na tag .panel do thema Flatly "margin-right: -1px;" para ficar igual a margin-left */
------------------------------------------------------------------> OK
	//TODO: Colocar datatable no projeto 
------------------------------------------------------------------> OK

	//TODO: Alterar Layout para do exemplo do medicon	
		// <p class="pCreateNew">
		//https://stackoverflow.com/questions/44666553/asp-net-core-and-jquery-unobtrusive-ajax-not-working
			"<form asp-action="" asp-controller="Plano" method="get" data-ajax="true" data-ajax-update="resultadoAlteracao" data-ajax-Loading="divcarregando">"
		--> Em andamento:
			-> Home já foi alterada
			-> Alterar as telas de "plano"
	=> Ajustes nas nas rotinas "Insert/update/Delete" para retornar "JsonResult" e não um "IActionResult"
------------------------------------------------------------------> OK

	/TODO: Plano Substituir as telas de "Delete" por "pop up"	
------------------------------------------------------------------> OK

	//TODO: Plano criar classe Service para separar as rotinas de acesso a BD do contoller
------------------------------------------------------------------> OK

	//TODO: Plano criar mensagens de resposta para "Inset / Update / Delete"
------------------------------------------------------------------> OK

/*======================================início dasd telas do sistema=======================================================================================*\
========================================OBS: Ajustar todas as rotinas de alteração porque quando vc vai alterar se não tiver informações básicas necessárias à tela fica travada sem fazer nada
	=> Plano (
			Index		=> Ok
			Create		=> OK
			Update		=> Ok Ajustes para colocar confirmação antes de permitir alteração
			Delete		=> OK
			Details		=> Ok
				Histórico	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

		//TODO: Continuar aqui as telas
		//Mostrar no pop up o nome do plano na hora de excluir?
		
	=> Equipe (
			Index		=> Ok		
				http://www.macoratti.net/15/12/mvc_mask1.htm
			Mask (99)99999-9999 para campo telefone
			Create		=> OK
			Update		=> OK
			Delete		=> OK
			Details		=> OK
				Histórico	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
	=> Alterar as rotinas e as telas para .net core
		)

	=> Corretor (
			Index		=> Ok	
			Create		=> OK
			Update		=> OK
			Delete		=> OK
			Details		=> OK
				Histórico	=> Falta apenas criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

	=> Cliente (					TODO: ocntinuar aqui 
			Index		=> OK
			Create		=> OK
			Update		=> OK
			Delete		=> OK
			Details		=> Falta
				Histórico	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

	=> Preço pLano (
			Index		=> Falta	=> Create / Controller / Service/
			Create		=> Falta
			Update		=> Falta
			Delete		=> Falta
			Details		=> Falta
				Histórico	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

	=> Proposta (
		-> Obs: Verificar se pode ou não "Retirar o valor da tabela proposta porque ela esse campos ja está cadastrado na tabela Preço plano" porque a proposta 
			pode ser a somatoria de valores do titular e dependente então pode ser que pricisamo deixa o campo valor na tabela proposta mesmo.
			Index		=> Falta
			Create		=> Falta
			Update		=> Falta
			Delete		=> Falta
			Details		=> Falta
				Histórico	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

	=> Dependente (
		-> Obs: Alteração relacionamento com a tabela de proposta para campo "TipoDependenteId" passar para tabela de dependente e sair da tabela de proposta 
		-> Obs: Ajustes na tabela dependente para adicionar "Campo CPF" do deoendete
			Index		=> OK
			Create		=> OK
			Update		=> Ok
			Delete		=> OK
			Details		=> OK
				Histórico	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

	=> Faixa etaria (	=> TODO: Melhorar o cadastro da faixa etária "1° campo faixaEtaria DI __ / ATÉ __" ao invés de apenas um campo para descrição
			Service		=> OK
			Index		=> OK
			Create		=> OK
			Update		=> OK
			Delete		=> OK
			Details		=> OK
				Histórioco	=> Falta somente após criar as tabelas de Históricos e alterar rotinas controller plano para salvar histórico ao cadastrar / alterar / deletar.
		)

Obs: Ajustes no modelo de dados para cadastrar apenas dependente e no final amarrar a proposta quando for cadastrar proposta

/*======================================Fim das telas do sistema web===========================================================================================*\

	=> Criar serviço para consultar informações do sistema para ser consumindo na aplicação mobile que ser desenvolvida pelo "Xamarin"
		=> Permitir corretor cadastrar cliente e proposta etc.





/*-----------------------------------Mas de dados para insert no projeto via Migration--------------------------------------------------------------------*\
	//TODO: Continuar aqui gerar os insertes para masa de teste
	//TODO: Criar classe Insert para masa de teste
			SeedingService				
	=> OK Os inserto são realizados após criar migration / update-dataBase se verificar o banco ainda não rodou os inserts do SeedingService agora é só executar o projeto que vai gerar a carga no Banco de dados
	
/*-----------------------------------Rotina de Histórico das telas do sistema-----------------------------------------------------------------------------*\
	//TODO: Criar as tabelas de "Históricos" e alterar as rotinas para salvar o históricos sempre que houver alterações.
	//TODO: Nas telas de Histórico carregar a lista de alterações 

/*-----------------------------------Rotina de Histórico das telas do sistema-----------------------------------------------------------------------------*\

-----------------------------------------------------------------------------------------------------------------------------------------------------------*\












































/*----------------------------------------------Upload arquivo exemplo ----------------------------------------------------------------------------------------
	-----------------Abixo apenas como fazer upload para fazer o download seguir o mesmo padrão do projeto nosconformes
	-----------------Razor
  <hr />
            <div class="form-group">
                <div class="form-group col-md-12">
                    @Html.Label("Arquivo: ", new { @class = "col-md-2 align-left control-label" })
                    <div class="col-md-4">
                        <input type="file" name="File Upload" id="txtUploadFile" class="btn btn-primary">
                    </div>
                </div>
            </div>
            
	------------------ JQuery/Js
	 $('#txtUploadFile').on('change', function (e) {

                var files = e.target.files;
                //var idUpload = 3; //uncomment this to make sure the ajax URL works                                
                var _dataReferencia = $("#dataReferenciaAteste").val();

                if (files.length > 0) {
                    if (window.FormData !== undefined) {
                        var data = new FormData();
                        for (var x = 0; x < files.length; x++) {
                            data.append("file" + x, files[x]);
                        }

                        $('#divCarregando').show();

                        if (files[0].size <= 2097152) { //Menor 2MB     
                            $.ajax(
                              {
                                  url: 'Aprovacao/UploadArquivo?dataReferencia=' + _dataReferencia,
                                  type: 'POST',
                                  data: data,
                                  processData: false,
                                  contentType: false,
                                  cache: false,
                                  success: function (data) {
                                      $('#divCarregando').fadeOut('slow');
                                      $("#tipoMensagemAteste").text(data.mensagemViewModel.TituloMensagem);
                                      $("#MsgAteste").html(data.mensagemViewModel.DescricaoMensagem);
                                      $('#ModalAteste').modal("show");
                                  },
                                  error: function () {
                                      $('#divCarregando').fadeOut('slow');
                                      $("#tipoMensagemAteste").text("Mensagem de Falha");
                                      $("#MsgAteste").html("Erro ao tentar realizar upload do arquivo!");
                                      $('#ModalAteste').modal("show");
                                  }
                              });
                        } else {
                            $('#divCarregando').fadeOut('slow');
                            $("#tipoMensagemAteste").text("Mensagem de Alerta");
                            $("#MsgAteste").html("Só é permitido upload de arquivos com tamanho menor que (2MB).");
                            $('#ModalAteste').modal("show");
                        }
                    }
                }
            });

-----------------------------------Contoller

 //[HttpPost]
        public JsonResult UploadArquivo(DateTime? dataReferencia)
        {
            if (VerificarPermissaoAcessoUsuario())
            {
                MensagemBusinessProxy mensagem = new MensagemBusinessProxy();
                UploadArquivoViewModel modelUpload = new UploadArquivoViewModel();
                ManterAprovacaoViewModel model = new ManterAprovacaoViewModel();
                model.uploadArquivo = new UploadArquivoViewModel();

                if (TempData["modelAprovacao"] != null && dataReferencia != null)
                {
                    model = (ManterAprovacaoViewModel)TempData["modelAprovacao"];
                    TempData["modelAprovacao"] = model;
                    TempData.Keep("modelAprovacao");
                    model.mensagemViewModel = new MensagemRetornoViewModel();

                    try
                    {
                        foreach (string file in Request.Files)
                        {
                            var fileContent = Request.Files[file];
                            if (fileContent != null && fileContent.ContentLength > 0)
                            {
                                byte[] buffer = null;
                                using (var binaryReader = new BinaryReader(fileContent.InputStream))
                                {
                                    buffer = binaryReader.ReadBytes(fileContent.ContentLength);
                                }

                                MemoryStream ms = new MemoryStream();
                                ms.Write(buffer, 0, buffer.Length);

                                modelUpload.Arquivo = ms; //TODO: Apenas para teste
                                modelUpload.DataReferencia = dataReferencia;
                                modelUpload.CodigoServidor = model.listaAprovacao.ElementAt(0).CodigoGestor;
                                modelUpload.CodigoAtividadeNivel3 = model.listaAprovacao.ElementAt(0).CodigoAtividadeNivel3;
                                modelUpload.NomeArquivo = fileContent.FileName;
                                modelUpload.Mime = fileContent.ContentType;
                            }
                        }

                        RetornoMensagemDTO mensagemRetorno = new AprovacaoBusinessProxy().InserirArquivoUploadAtividade(ConverterUploadArquivoViewModelUploadArquivoDTO(modelUpload));
                        model.mensagemViewModel = new MensagemRetornoViewModel();
                        model.mensagemViewModel.NumeroMensagem = mensagemRetorno.NumeroMensagem;
                        model.mensagemViewModel.DescricaoMensagem = mensagemRetorno.DescricaoMensagem;

                        if (model.mensagemViewModel.NumeroMensagem == mensagem.BuscarMensagemNaLista(Constantes.MENSAGEM_049).NumeroMensagem)
                        {
                            model.mensagemViewModel.TituloMensagem = "Mensagem de Sucesso";
                        }
                        else
                        {
                            model.mensagemViewModel.TituloMensagem = "Mensagem de Falha";
                        }
                    }
                    catch (Exception ex)
                    {
                        Response.StatusCode = (int)HttpStatusCode.BadRequest;
                        model.mensagemViewModel = new MensagemRetornoViewModel();
                        model.mensagemViewModel.NumeroMensagem = mensagem.BuscarMensagemNaLista(Constantes.MENSAGEM_90000).NumeroMensagem;
                        model.mensagemViewModel.DescricaoMensagem = mensagem.BuscarMensagemNaLista(Constantes.MENSAGEM_90000).DescricaoMensagem;
                        model.mensagemViewModel.TituloMensagem = "Mensagem de Falha";

                        return Json(model, JsonRequestBehavior.AllowGet);
                    }
                }
                else
                {
                    Response.StatusCode = (int)HttpStatusCode.BadRequest;
                    model.mensagemViewModel = new MensagemRetornoViewModel();
                    model.mensagemViewModel.NumeroMensagem = mensagem.BuscarMensagemNaLista(Constantes.MENSAGEM_90000).NumeroMensagem;
                    model.mensagemViewModel.DescricaoMensagem = mensagem.BuscarMensagemNaLista(Constantes.MENSAGEM_90000).DescricaoMensagem;
                    model.mensagemViewModel.TituloMensagem = "Mensagem de Falha";

                    return Json(model, JsonRequestBehavior.AllowGet);
                }

                return Json(model, JsonRequestBehavior.AllowGet);
            }
            return Json(null, JsonRequestBehavior.AllowGet);
        }

-----------------------------------------------------------------------------------------------------------------------------------------------------------*\


$("#Cpf").change(function () {
    var cpf = $("#Cpf").val().replace('.','').replace('-','');
    cpf.replace('.','');

    if (validaCPF(cpf)) {
        alert(cpf);
        alert('CPF Valido ');
    }
    else {
        alert(cpf);
        alert('CPF Invalido ');
    }
});

 ////https://www.geradordecpf.org/funcao-javascript-validar-cpf.html
        function validaCPF(cpf) {
            var numeros, digitos, soma, i, resultado, digitos_iguais;
            digitos_iguais = 1;
            if (cpf.length < 11)
                return false;
            for (i = 0; i < cpf.length - 1; i++)
                if (cpf.charAt(i) != cpf.charAt(i + 1)) {
                    digitos_iguais = 0;
                    break;
                }
            if (!digitos_iguais) {
                numeros = cpf.substring(0, 9);
                digitos = cpf.substring(9);
                soma = 0;
                for (i = 10; i > 1; i--)
                    soma += numeros.charAt(10 - i) * i;
                resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
                if (resultado != digitos.charAt(0))
                    return false;
                numeros = cpf.substring(0, 10);
                soma = 0;
                for (i = 11; i > 1; i--)
                    soma += numeros.charAt(11 - i) * i;
                resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
                if (resultado != digitos.charAt(1))
                    return false;
                return true;
            }
            else
                return false;
        }